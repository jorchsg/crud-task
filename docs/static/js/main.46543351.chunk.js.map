{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","tarea","setTarea","tareas","setTareas","modoEdicion","setModoEdicion","id","setId","error","setError","className","length","map","item","nombreTarea","onClick","arrayFiltrado","filter","eliminarTarea","editar","onSubmit","e","preventDefault","trim","arrayEditado","shortid","generate","type","placeholder","onChange","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA4JeA,MAzJf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAIeF,mBAAS,IAJxB,mBAING,EAJM,KAIEC,EAJF,OAMyBJ,oBAAS,GANlC,mBAMNK,EANM,KAMOC,EANP,OAQON,mBAAS,IARhB,mBAQNO,EARM,KAQFC,EARE,OAUaR,mBAAS,MAVtB,mBAUNS,EAVM,KAUCC,EAVD,KA8Eb,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,uBACA,uBACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,aAAd,SAEsB,IAAlBR,EAAOS,OACL,oBAAID,UAAU,kBAAd,8BAGER,EAAOU,KAAI,SAAAC,GAAI,OACb,qBAAIH,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,SAAwBG,EAAKC,cAC7B,wBACEJ,UAAU,yCACVK,QAAS,kBA5DX,SAAAT,GAEpB,IAAMU,EAAgBd,EAAOe,QAAO,SAAAJ,GAAI,OAAIA,EAAKP,KAAOA,KACxDH,EAAUa,GAyD2BE,CAAcL,EAAKP,KAFpC,sBAMA,wBACEI,UAAU,qCACVK,QAAS,kBA3DlB,SAAAF,GAEbR,GAAe,GAEfJ,EAASY,EAAKC,aAGdP,EAAMM,EAAKP,IAoD0Ba,CAAON,IAFxB,sBARmCA,EAAKP,YAoBtD,sBAAKI,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACGN,EAAc,eAAiB,kBAElC,uBACEgB,SAAUhB,EA/DF,SAAAiB,GAKlB,GAHAA,EAAEC,iBAGGtB,EAAMuB,OAAX,CAMA,IAAMC,EAAetB,EAAOU,KAE1B,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,EAAK,CAAEA,GAAIA,EAAIQ,YAAad,GAAUa,KAE5DV,EAAUqB,GACVnB,GAAe,GACfJ,EAAS,IACTM,EAAM,IACNE,EAAS,WAbPA,EAAS,2BAhDQ,SAAAY,GAEnBA,EAAEC,iBAGGtB,EAAMuB,QAMXpB,EAAU,GAAD,mBACJD,GADI,CAEP,CAAEI,GAAImB,IAAQC,WAAYZ,YAAad,MAIzCC,EAAS,IAETQ,EAAS,OAbPA,EAAS,2BAkGH,UAIID,EAAQ,sBAAME,UAAU,cAAhB,SAA+BF,IAAgB,KAEzD,uBACEmB,KAAK,OACLjB,UAAU,oBACVkB,YAAY,gBACZC,SAAU,SAAAR,GAAC,OAAIpB,EAASoB,EAAES,OAAOC,QACjCA,MAAO/B,IAERI,EAEG,wBACEM,UAAU,4BACViB,KAAK,SAFP,6BAMA,wBACEjB,UAAU,yBACViB,KAAK,SAFP,oCCjIHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46543351.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport shortid from 'shortid';\n\nfunction App() {\n\n  const [tarea, setTarea] = useState('');\n\n  const [tareas, setTareas] = useState([]);\n\n  const [modoEdicion, setModoEdicion] = useState(false);\n\n  const [id, setId] = useState('');\n\n  const [error, setError] = useState(null);\n\n  // Funcion para agregar tarea\n  const agregarTarea = e => {\n\n    e.preventDefault();\n\n    // Validar que el input no este vacio\n    if (!tarea.trim()) {\n      setError('Escriba algo por favor')\n      return;\n    }\n\n    // Agregar Tareas \n    setTareas([\n      ...tareas,\n      { id: shortid.generate(), nombreTarea: tarea }\n    ]);\n\n    // Limpiar Formulario\n    setTarea('');\n\n    setError(null);\n\n  }\n\n  // Función para eliminar una tarea por medio del id\n  const eliminarTarea = id => {\n    // Si el ID coincide lo eliminamos del arreglo filtrado, en caso de que sean distintos lo conservamos en el arreglo.\n    const arrayFiltrado = tareas.filter(item => item.id !== id)\n    setTareas(arrayFiltrado)\n  }\n\n  // Función para cambiar los elementos del formulario al editar una tarea\n  const editar = item => {\n\n    setModoEdicion(true);\n    // Le pasamos al input el valor del elemento al hacer clic en editar\n    setTarea(item.nombreTarea);\n\n    // Obtenemos el ID\n    setId(item.id)\n  }\n\n  // Funcion para editar una tarea\n  const editarTarea = e => {\n\n    e.preventDefault();\n\n    // Validar que el input no este vacio\n    if (!tarea.trim()) {\n      setError('Escriba algo por favor');\n      return;\n    }\n\n    // Obtener el emento que queremos editar con Map\n    const arrayEditado = tareas.map(\n      // Si el ID es correcto, devolvemos el objeto con sus valores en caso contrario retornamos todas las tareas\n      item => item.id === id ? { id: id, nombreTarea: tarea } : item\n    )\n    setTareas(arrayEditado)\n    setModoEdicion(false);\n    setTarea('');\n    setId('');\n    setError(null);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container mt-5\">\n        <h1 className=\"text-center\">CRUD TASK</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h4 className=\"text-center\">Lista de Tareas</h4>\n            <ul className=\"list-group\">\n              {\n                tareas.length === 0 ? (\n                  <li className=\"list-group-item\">No Tienes Tareas</li>\n                ) : (\n\n                    tareas.map(item => (\n                      <li className=\"list-group-item\" key={item.id}>\n                        <span className=\"lead\">{item.nombreTarea}</span>\n                        <button\n                          className=\"btn btn-danger btn-sm float-right mx-2\"\n                          onClick={() => eliminarTarea(item.id)}\n                        >Eliminar\n                        </button>\n\n                        <button\n                          className=\"btn btn-warning btn-sm float-right\"\n                          onClick={() => editar(item)}\n                        >Editar\n                        </button>\n                      </li>\n                    ))\n\n                  )\n              }\n            </ul>\n          </div>\n          <div className=\"col-4\">\n            <h4 className=\"text-center\">\n              {modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'}\n            </h4>\n            <form\n              onSubmit={modoEdicion ? editarTarea : agregarTarea}\n            >\n              {\n                error ? <span className=\"text-danger\">{error}</span> : null\n              }\n              <input\n                type=\"text\"\n                className=\"form-control mb-2\"\n                placeholder=\"Ingrese Tarea\"\n                onChange={e => setTarea(e.target.value)}\n                value={tarea}\n              />\n              {modoEdicion ?\n                (\n                  <button\n                    className=\"btn btn-warning btn-block\"\n                    type=\"submit\"\n                  >Guardar Cambios</button>\n                )\n                : (\n                  <button\n                    className=\"btn btn-dark btn-block\"\n                    type=\"submit\"\n                  >Agregar</button>\n                )}\n            </form>\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}